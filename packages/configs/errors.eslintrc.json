{
  "rules": {
    // https://eslint.org/docs/rules/
    // Possible Errors
    "no-inner-declarations": "off",
    // Best Practices
    "curly": "error",
    "eol-last": "error",
    "eqeqeq": [
      "error",
      "smart"
    ],
    "guard-for-in": "error",
    "no-caller": "error",
    "no-eval": "error",
    "no-redeclare": "off",
    "no-restricted-imports": [
      "error",
      "..",
      "../index",
      "../..",
      "../../index"
    ],
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true
      }
    ],
    // Variables
    "no-unused-vars": "off", // typescript-eslint rule activated instead
    "no-use-before-define": "off", // typescript-eslint rule activated instead
    // Stylistic Issues
    "max-len": [
      "error",
      {
        "code": 180
      }
    ],
    "no-multiple-empty-lines": "off",
    "no-underscore-dangle": "off",
    "quotes": "off", // typescript-eslint rule activated instead
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "one-var": [
      "error",
      "never"
    ],
    // ECMAScript6
    "arrow-body-style": "off",
    "arrow-parens": "off",
    "no-var": "error",
    "prefer-const": "off",
    // @typescript-eslint/eslint-plugin
    "@typescript-eslint/class-name-casing": "off",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/semi": "off",
    "@typescript-eslint/ban-ts-ignore": "off",
    // eslint-plugin-import
    "import/export": "off", // we have multiple exports due to namespaces, enums and classes that share the same name
    "import/no-deprecated": "error",
    // eslint-plugin-no-null
    "no-null/no-null": "error",
    "@typescript-eslint/ban-ts-comment": "off"
  }
}
